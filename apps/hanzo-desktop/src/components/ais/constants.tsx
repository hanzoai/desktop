import {
  AnthropicIcon,
  AyaCohereIcon,
  DeepSeekIcon,
  ExoIcon,
  GeminiIcon,
  GoogleIcon,
  GrokIcon,
  GroqIcon,
  LmStudioIcon,
  MetaIcon,
  MistralIcon,
  OllamaIcon,
  OpenAIIcon,
  OpenRouterIcon,
  PerplexityIcon,
  QwenIcon,
  HanzoIcon,
  TogetherAI,
} from '@hanzo_network/hanzo-ui/assets';

export enum ModelProvider {
  Aya = 'aya',
  Claude = 'claude',
  DeepSeek = 'deepseek',
  Exo = 'exo',
  Gemini = 'gemini',
  Google = 'google',
  Grok = 'grok',
  Groq = 'groq',
  LmStudio = 'lmstudio',
  Meta = 'meta',
  Mistral = 'mistral',
  Ollama = 'ollama',
  OpenAI = 'openai',
  OpenRouter = 'openrouter',
  Perplexity = 'perplexity',
  Qwen = 'qwen',
  'Hanzo-Backend' = 'hanzo-backend',
  TogetherAI = 'togetherai',
}

export type ModelProviderKey = Lowercase<keyof typeof ModelProvider>;

export const providerMappings = {
  [ModelProvider.Aya]: AyaCohereIcon,
  [ModelProvider.Claude]: AnthropicIcon,
  [ModelProvider.DeepSeek]: DeepSeekIcon,
  [ModelProvider.Exo]: ExoIcon,
  [ModelProvider.Gemini]: GeminiIcon,
  [ModelProvider.Google]: GoogleIcon,
  [ModelProvider.Grok]: GrokIcon,
  [ModelProvider.Groq]: GroqIcon,
  [ModelProvider.LmStudio]: LmStudioIcon,
  [ModelProvider.Mistral]: MistralIcon,
  [ModelProvider.Meta]: MetaIcon,
  [ModelProvider.Ollama]: OllamaIcon,
  [ModelProvider.OpenAI]: OpenAIIcon,
  'openai-legacy': OpenAIIcon,
  [ModelProvider.OpenRouter]: OpenRouterIcon,
  [ModelProvider.Perplexity]: PerplexityIcon,
  [ModelProvider.Qwen]: QwenIcon,
  [ModelProvider['Hanzo-Backend']]: HanzoIcon,
  [ModelProvider.TogetherAI]: TogetherAI,
};
